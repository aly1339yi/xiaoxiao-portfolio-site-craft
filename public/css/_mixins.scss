/* =========================================================================
   MIXIN
   ========================================================================= */



// MEDIA QUERY max-width
@mixin mq-lt($name) {
	@media(max-width: map-get($breakpoints, $name) - 1){
		@content;
	}
}

// MEDIA QUERY min-width
@mixin mq-gteq($name) {
	@media(min-width: map-get($breakpoints, $name)){
		@content;
	}
}

// MEDIA QUERY max-width
@mixin mq-\<($name) {
	@media(max-width: map-get($breakpoints, $name) - 1){
		@content;
	}
}

// MEDIA QUERY min-width
@mixin mq-\>\=($name) {
	@media(min-width: map-get($breakpoints, $name)){
		@content;
	}
}




@mixin hidden-small() {
	@include mq-lt(small){
		display: none !important;
	}
}

@mixin shown-small() {
	@include mq-gteq(small){
		display: none !important;
	}
}

@mixin hidden-medium() {
	@include mq-lt(medium){
		display: none !important;
	}
}

@mixin shown-medium() {
	@include mq-gteq(medium){
		display: none !important;
	}
}




// FLEXBOX

@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

@mixin flexflow($values) {
  -webkit-flex-flow: $values;
     -moz-flex-flow: $values;
      -ms-flex-flow: $values;
          flex-flow: $values;
}


// INPUT PLACEHOLDER
@mixin input-placeholder {
  &::-webkit-input-placeholder {@content}
  &:-moz-placeholder           {@content}
  &::-moz-placeholder          {@content}
  &:-ms-input-placeholder      {@content}
}


// CLEARFIX
@mixin clearfix() {
	&:after {
	    content:" ";
	    display:block;
	    clear:both;
	}
}



// PREFIX
@mixin css3-prefix($property, $value) {
  -webkit-#{$property}: #{$value};
   -khtml-#{$property}: #{$value};
     -moz-#{$property}: #{$value};
      -ms-#{$property}: #{$value};
       -o-#{$property}: #{$value};
          #{$property}: #{$value};
}


// TRANSITION
@mixin transition($properties...) {
  @if length($properties) >= 1 {
    @include css3-prefix('transition', $properties);
  }
  @else {
    @include css3-prefix('transition',  "all 400ms ease-in-out 0s");
  }
}

// TRANSFORM
@mixin transform($params) {
  @include css3-prefix('transform', $params);
}

// ROTATE
@mixin rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0) {
  @include css3-prefix('transform', rotate($deg + deg));
  filter: progid:DXImageTransform.Microsoft.Matrix(
    M11=#{$m11}, M12=#{$m12}, M21=#{$m21}, M22=#{$m22}, sizingMethod='auto expand');
    zoom: 1;
}




